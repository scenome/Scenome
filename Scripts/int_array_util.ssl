////////////////////////////////////////////////////////////////////////////////
// $file             INT_ARRAY_UTIL.SSL
// $author           Scenomics LLC
// $privacy          PUBLIC
// $description      This script implements IntArray helper functions.
// $legal            Reserved * r_rLegal
//
// Copyright 2004-2014 Scenomics LLC. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////

library SpaIntArrayUtil;

////////////////////////////////////////////////////////////////////////////////
// function
////////////////////////////////////////////////////////////////////////////////

function void SendToOutput( IntArray p_aiIntArray )
{
   Console.Message( "INTARRAY OUTPUT generated by INT_ARRAY_UTIL.SSL" );

   for( int i = 0; i < p_aiIntArray.Count; ++i )
   {
      Console.Message( p_aiIntArray.Objects[i] );
   }
}

////////////////////////////////////////////////////////////////////////////////
// function
////////////////////////////////////////////////////////////////////////////////

function void Out( IntArray p_aiIntArray )
{
   SendToOutput( p_aiIntArray );
}

////////////////////////////////////////////////////////////////////////////////
//  function
////////////////////////////////////////////////////////////////////////////////

function void AccumulateIntArrayValues( IntArray p_aiIntArray )
{
   Console.Message( "INTARRAY OUTPUT generated by INT_ARRAY_UTIL.SSL" );
   int a_iAccumulation = 0;

   for( int i = 0; i < p_aiIntArray.Count; ++i )
   {
      a_iAccumulation += p_aiIntArray.Objects[i];
   }

   Console.Message( "Cumulative value of matrix: " + a_iAccumulation );
}

////////////////////////////////////////////////////////////////////////////////
//  function
////////////////////////////////////////////////////////////////////////////////

function void ComputeDeterminantFromDiagonalMatrix( IntArray p_aiIntArray )
{
   Console.Message( "INTARRAY OUTPUT generated by INT_ARRAY_UTIL.SSL" );
   int a_iDeterminant;

   for( int i = 0; i < p_aiIntArray.Count; ++i )
   {
      a_iDeterminant *= p_aiIntArray.Objects[i];
   }

   Console.Message( "Determinant of matrix: " + a_iDeterminant );
}
