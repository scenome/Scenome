#ifndef SPA_CONSTANTS
#define SPA_CONSTANTS 

/////////////////////////////////////////////////////////////////////////////////
// Global Constant Declarations
/////////////////////////////////////////////////////////////////////////////////

/* This file is automatically generated and will be overwritten. To change this
file, start the Shader application and open INCLUDES\SPA_CONSTANTS.BOX. */

/* ABOUT: This file contains global constants and other data you wish to make
available to all shaders. */

/* Controls editing-mode rendering output. This is implemented in the fragment
program in particular. A non-zero w component indicates the rendering operations
must generate a selection highlight (0.5) or a feedback geometry identifier (1.0). */
uniform vec4 SPA_EditState;

/* This indicates an offset for geometry indices or primitive id. Sum with the
primitive ID to obtain a unique ID per primitive. See SPA_GPEmitFeedbackID() in
SPA_Geometry.glsl. */
uniform int SPA_BaseObjectID;

/* This value indicates whether or not the editing mode output requires unique
geometry indices. When false, it suppresses unique IDs. See SPA_GPEmitFeedbackID in
SPA_Geometry.glsl. */
uniform bool SPA_UsePerObjectID;

// This value sets the maximum light count, as defined by the application.
const int maxLightCount = int( 32 );

/* The maximum light count for a shader. Must be less than or equal to
maxLightCount. */
const int lightCount = int( 32 );

// !SPA_CONSTANTS

#endif
