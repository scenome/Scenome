#ifndef SPA_LIGHTS
#define SPA_LIGHTS 
#include <SPA_Constants.glsl>

/////////////////////////////////////////////////////////////////////////////////
// Light Data Structures
/////////////////////////////////////////////////////////////////////////////////

/* This file is automatically generated and will be overwritten. To change this
file, start the Shader application and open INCLUDES\SPA_LIGHTS.BOX. */

/* ABOUT: This is the material struct and uniform block. These are included in
shader source code remotely, and should not be duplicated per-shader. Different
types of materials should be defined here. */
struct SPA_Light
{
   bool isLightOn;
   int lightMode;
   float lightIntensity;
   float lightConstantAttenuation;
   float lightLinearAttenuation;
   float lightQuadraticAttenuation;
   mat4x4 lightCameraMatrix;
   vec3 lightDirection;
   vec4 lightPosition;
   vec4 lightAmbientColor;
   vec4 lightDiffuseColor;
   vec4 lightSpecularColor;
   vec4 lightEmissiveColor;
   float lightSpotExponent;
};

uniform SPA_LightsBlock
{
   SPA_Light lights[32];
};

uniform SPA_TestBlock
{
   vec4 yellow;
   bool myBool1;
} TEST[4];

const int myInt = int( 1 );
int myIntArray[myInt];

// !SPA_LIGHTS

#endif
