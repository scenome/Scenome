////////////////////////////////////////////////////////////////////////////////
//
// $file             ENUMERATION_UTIL.SSL
// $author           Scenomics LLC
// $description      This script contains enumeration access functions generated from parsed C++ source.
//
// Copyright 2004-2014 Scenomics LLC. All Rights Reserved.
//
////////////////////////////////////////////////////////////////////////////////

library Enum;

// This library is automatically generated by CompileEnumerations() in META_UTIL.SSL. Local changes will be destroyed.
// This library should not import any other libraries.

function int BadDataSourceDimension() { return 0; }
function int BinaryOperator_Assign() { return 0; }
function int BinaryOperator_Add() { return 1; }
function int BinaryOperator_Subtract() { return 2; }
function int BinaryOperator_Multiply() { return 3; }
function int BinaryOperator_Divide() { return 4; }
function int BinaryOperator_AddAssign() { return 5; }
function int BinaryOperator_SubtractAssign() { return 6; }
function int BinaryOperator_MultiplyAssign() { return 7; }
function int BinaryOperator_DivideAssign() { return 8; }
function int BinaryOperator_GreaterThan() { return 9; }
function int BinaryOperator_LessThan() { return 10; }
function int BinaryOperator_GreaterThanOrEqualTo() { return 11; }
function int BinaryOperator_LessThanOrEqualTo() { return 12; }
function int BinaryOperator_IsEqualTo() { return 13; }
function int BinaryOperator_NotEqualTo() { return 14; }
function int BinaryOperator_LogicalAnd() { return 15; }
function int BinaryOperator_LogicalInclusiveOr() { return 16; }
function int BinaryOperator_LogicalExclusiveOr() { return 17; }
function int BinaryOperator_BitShiftLeft() { return 18; }
function int BinaryOperator_BitShiftRight() { return 19; }
function int BinaryOperator_BitShiftLeftAssign() { return 20; }
function int BinaryOperator_BitShiftRightAssign() { return 21; }
function int BinaryOperator_BitwiseExclusiveOr() { return 22; }
function int BinaryOperator_BitwiseExclusiveOrAssign() { return 23; }
function int BinaryOperator_BitwiseAnd() { return 24; }
function int BinaryOperator_BitwiseAndAssign() { return 25; }
function int BinaryOperator_BitwiseInclusiveOr() { return 26; }
function int BinaryOperator_BitwiseInclusiveOrAssign() { return 27; }
function int BinaryOperator_BitwiseComplement() { return 28; }
function int BinaryOperator_Modulus() { return 29; }
function int BinaryOperator_ModulusAssign() { return 30; }
function int BinaryOperator_Max() { return 31; }
function int DeclarationType_Boolean() { return 0; }
function int DeclarationType_Integer() { return 1; }
function int DeclarationType_Float() { return 2; }
function int DeclarationType_Double() { return 3; }
function int DeclarationType_Vector() { return 4; }
function int DeclarationType_Color() { return 5; }
function int DeclarationType_Matrix() { return 6; }
function int DeclarationType_Sampler() { return 7; }
function int DeclarationType_StructInstance() { return 8; }
function int DeclarationType_InterfaceBlock() { return 9; }
function int DeclarationType_UniformBuffer() { return 10; }
function int DeclarationType_ShaderBuffer() { return 11; }
function int DeclarationType_Function() { return 12; }
function int DeclarationType_Layout() { return 13; }
function int DeclarationType_Uint() { return 14; }
function int DeclarationType_Max() { return 15; }
function int Binding_Local() { return 0; }
function int Binding_Constant() { return 1; }
function int Binding_Uniform() { return 2; }
function int Binding_Attribute() { return 3; }
function int Binding_Varying() { return 4; }
function int Binding_CompileDirective() { return 5; }
function int Binding_Input() { return 6; }
function int Binding_Output() { return 7; }
function int Binding_None() { return 8; }
function int Binding_Buffer() { return 9; }
function int Binding_Subroutine() { return 10; }
function int Binding_Struct() { return 11; }
function int Binding_StructInstance() { return 12; }
function int Binding_UniformBuffer() { return 13; }
function int Binding_Integral() { return 14; }
function int Binding_ConstIntegral() { return 15; }
function int Binding_MAX() { return 16; }
function int Interpolation_None() { return 0; }
function int Interpolation_Flat() { return 1; }
function int Interpolation_NoPerspective() { return 2; }
function int Interpolation_Smooth() { return 3; }
function int Interpolation_Centroid() { return 4; }
function int Interpolation_Sample() { return 5; }
function int Interpolation_MAX() { return 6; }
function int TextureF_None() { return 0; }
function int TextureF_MIPMap() { return 1; }
function int TextureF_NeedUpdate() { return 1; }
function int TextureF_External() { return 1; }
function int TextureF_NeedReload() { return 1; }
function int TextureF_RenderedTexture() { return 1; }
function int TextureF_SubdivideAtExport() { return 1; }
function int TextureF_Unpacked() { return 1; }
function int TextureType_2D() { return 0; }
function int TextureType_3D() { return 1; }
function int TextureType_Cube() { return 2; }
function int TextureType_RenderBuffer() { return 3; }
function int TextureT_None() { return 0; }
function int TextureT_Clamp() { return 1; }
function int TNM_TimeMs_0_X() { return 0; }
function int TNM_TimeMs_0_1() { return 1; }
function int TNM_TimeMs_0_2PI() { return 2; }
function int TNM_TimeS_0_X() { return 3; }
function int TNM_TimeS_0_1() { return 4; }
function int TNM_TimeS_0_2PI() { return 5; }
function int TNM_CosTimeS_0_X() { return 6; }
function int TNM_SinTimeS_0_X() { return 7; }
function int TNM_TanTimeS_0_X() { return 8; }
function int TNM_CosTimeS_0_1() { return 9; }
function int TNM_SinTimeS_0_1() { return 10; }
function int TNM_TanTimeS_0_1() { return 11; }
function int TNM_CosTimeS_0_2PI() { return 12; }
function int TNM_SinTimeS_0_2PI() { return 13; }
function int TNM_TanTimeS_0_2PI() { return 14; }
function int TNM_FrameTimeMs() { return 15; }
function int TNM_FrameTimeS() { return 16; }
function int TNM_FrameIndex() { return 17; }
function int TNM_FramesPerSecond() { return 18; }
function int MinVectorDim() { return 2; }
function int MaxVectorDim() { return 4; }
function int MinComponentDim() { return 0; }
function int MaxComponentDim() { return 3; }
function int MinArrayDimension() { return 0; }
function int MaxIntArrayDimension() { return 0; }
function int MaxUintArrayDimension() { return 0; }
function int MaxVectorArrayDimension() { return 16536; }
function int ImplicitlySizedArray() { return -1; }
function int MaxExpressionLength() { return 1024; }
function int ExpressionSide_None() { return 0; }
function int ExpressionSide_Left() { return 1; }
function int ExpressionSide_Right() { return 2; }
function int ExpressionSide_Max() { return 3; }
function int VectorNotation_RGBA() { return 0; }
function int VectorNotation_XYZW() { return 1; }
function int VectorNotation_STPQ() { return 2; }
function int VectorNotation_Max() { return 3; }
function int VectorMember_0() { return 0; }
function int VectorMember_1() { return 1; }
function int VectorMember_2() { return 2; }
function int VectorMember_3() { return 3; }
function int VectorMember_Max() { return 4; }
function int OptionalVectorMember_None() { return 0; }
function int OptionalVectorMember_0() { return 1; }
function int OptionalVectorMember_1() { return 2; }
function int OptionalVectorMember_2() { return 3; }
function int OptionalVectorMember_3() { return 4; }
function int OptionalVectorMember_Max() { return 5; }
function int ExpressionType_Expression() { return 0; }
function int ExpressionType_Constructor() { return 1; }
function int ExpressionType_Function() { return 2; }
function int ExpressionType_FunctionParameter() { return 3; }
function int ExpressionType_ConstructorParameter() { return 4; }
function int ExpressionType_FunctionDeclaration() { return 5; }
function int ExpressionType_FunctionPrototype() { return 6; }
function int ExpressionType_InitializerList() { return 7; }
function int ExpressionType_Return() { return 8; }
function int ExpressionType_Max() { return 9; }
function int UnaryOperator_None() { return 0; }
function int UnaryOperator_Plus() { return 1; }
function int UnaryOperator_Minus() { return 2; }
function int UnaryOperator_Complement() { return 3; }
function int UnaryOperator_Not() { return 4; }
function int UnaryOperator_PrefixIncrement() { return 5; }
function int UnaryOperator_PrefixDecrement() { return 6; }
function int UnaryOperator_PostfixIncrement() { return 7; }
function int UnaryOperator_PostfixDecrement() { return 8; }
function int UnaryOperator_Max() { return 9; }
function int BinaryExpressionStructure_None() { return 0; }
function int BinaryExpressionStructure_Scalar_Scalar() { return 1; }
function int BinaryExpressionStructure_Scalar_Vector() { return 2; }
function int BinaryExpressionStructure_Scalar_Matrix() { return 3; }
function int BinaryExpressionStructure_Vector_Scalar() { return 4; }
function int BinaryExpressionStructure_Vector_Vector() { return 5; }
function int BinaryExpressionStructure_Vector_Matrix() { return 6; }
function int BinaryExpressionStructure_Matrix_Scalar() { return 7; }
function int BinaryExpressionStructure_Matrix_Vector() { return 8; }
function int BinaryExpressionStructure_Matrix_Matrix() { return 9; }
function int BinaryExpressionStructure_Struct_Struct() { return 10; }
function int BinaryExpressionStructure_Sampler_Sampler() { return 11; }
function int BinaryExpressionStructure_Max() { return 12; }
function int GLSL_Qualifier_None() { return 0; }
function int GLSL_Qualifier_Invariant() { return 1; }
function int GLSL_Qualifier_Precision() { return 2; }
function int GLSL_Qualifier_Precise() { return 3; }
function int GLSL_Qualifier_Smooth() { return 4; }
function int GLSL_Qualifier_Flat() { return 5; }
function int GLSL_Qualifier_NoPerspective() { return 6; }
function int GLSL_Qualifier_LowP() { return 7; }
function int GLSL_Qualifier_MediumP() { return 8; }
function int GLSL_Qualifier_HighP() { return 9; }
function int GLSL_Qualifier_Const() { return 10; }
function int GLSL_Qualifier_In() { return 11; }
function int GLSL_Qualifier_Out() { return 12; }
function int GLSL_Qualifier_Uniform() { return 13; }
function int GLSL_Qualifier_Buffer() { return 14; }
function int GLSL_Qualifier_Centroid() { return 15; }
function int GLSL_Qualifier_Sample() { return 16; }
function int GLSL_Qualifier_Patch() { return 17; }
function int GLSL_Qualifier_Coherent() { return 18; }
function int GLSL_Qualifier_Volatile() { return 19; }
function int GLSL_Qualifier_Restrict() { return 20; }
function int GLSL_Qualifier_ReadOnly() { return 21; }
function int GLSL_Qualifier_WriteOnly() { return 22; }
function int GLSL_Qualifier_Location() { return 23; }
function int GLSL_Qualifier_Binding() { return 24; }
function int GLSL_Qualifier_Offset() { return 25; }
function int GLSL_Qualifier_Index() { return 26; }
function int GLSL_Qualifier_Component() { return 27; }
function int GLSL_Qualifier_Invocations() { return 28; }
function int GLSL_Qualifier_Stream() { return 29; }
function int GLSL_Qualifier_PointMode() { return 30; }
function int GLSL_Qualifier_MaxVertices() { return 31; }
function int GLSL_Qualifier_Points() { return 32; }
function int GLSL_Qualifier_Vertices() { return 33; }
function int GLSL_Qualifier_Lines() { return 34; }
function int GLSL_Qualifier_LinesAdjacency() { return 35; }
function int GLSL_Qualifier_TrianglesAdjacency() { return 36; }
function int GLSL_Qualifier_LineStrip() { return 37; }
function int GLSL_Qualifier_TriangleStrip() { return 38; }
function int GLSL_Qualifier_Quads() { return 39; }
function int GLSL_Qualifier_Triangles() { return 40; }
function int GLSL_Qualifier_Isolines() { return 41; }
function int GLSL_Qualifier_EqualSpacing() { return 42; }
function int GLSL_Qualifier_FractionalEvenSpacing() { return 43; }
function int GLSL_Qualifier_FractionalOddSpacing() { return 44; }
function int GLSL_Qualifier_Cw() { return 45; }
function int GLSL_Qualifier_Ccw() { return 46; }
function int GLSL_Qualifier_EarlyFragmentTests() { return 47; }
function int GLSL_Qualifier_RowMajor() { return 48; }
function int GLSL_Qualifier_ColumnMajor() { return 49; }
function int GLSL_Qualifier_Std140() { return 50; }
function int GLSL_Qualifier_Std430() { return 51; }
function int GLSL_Qualifier_Packed() { return 52; }
function int GLSL_Qualifier_Shared() { return 53; }
function int GLSL_Qualifier_Align() { return 54; }
function int GLSL_Qualifier_XfbBuffer() { return 55; }
function int GLSL_Qualifier_XfbOffset() { return 56; }
function int GLSL_Qualifier_XfbStride() { return 57; }
function int GLSL_Qualifier_InOut() { return 58; }
function int GLSL_Qualifier_Attribute() { return 59; }
function int GLSL_Qualifier_Varying() { return 60; }
function int GLSL_Qualifier_OriginUpperLeft() { return 61; }
function int GLSL_Qualifier_PixelCenterInteger() { return 62; }
function int GLSL_Qualifier_CompilerDirective() { return 63; }
function int GLSL_Qualifier_DepthAny() { return 64; }
function int GLSL_Qualifier_DepthGreater() { return 65; }
function int GLSL_Qualifier_DepthLess() { return 66; }
function int GLSL_Qualifier_DepthUnchanged() { return 67; }
function int GLSL_Qualifier_Subroutine() { return 68; }
function int GLSL_Qualifier_Size1x8() { return 69; }
function int GLSL_Qualifier_Size1x16() { return 70; }
function int GLSL_Qualifier_Size1x32() { return 71; }
function int GLSL_Qualifier_Size2x32() { return 72; }
function int GLSL_Qualifier_Size4x32() { return 73; }
function int GLSL_Qualifier_Rgba32f() { return 74; }
function int GLSL_Qualifier_Rgba16f() { return 75; }
function int GLSL_Qualifier_Rg32f() { return 76; }
function int GLSL_Qualifier_Rg16f() { return 77; }
function int GLSL_Qualifier_R11f_g11f_b10f() { return 78; }
function int GLSL_Qualifier_R32f() { return 79; }
function int GLSL_Qualifier_R16f() { return 80; }
function int GLSL_Qualifier_Rgba16() { return 81; }
function int GLSL_Qualifier_Rgb10_a2() { return 82; }
function int GLSL_Qualifier_Rgba8() { return 83; }
function int GLSL_Qualifier_Rg16() { return 84; }
function int GLSL_Qualifier_Rg8() { return 85; }
function int GLSL_Qualifier_R16() { return 86; }
function int GLSL_Qualifier_R8() { return 87; }
function int GLSL_Qualifier_Rgba16_snorm() { return 88; }
function int GLSL_Qualifier_Rgba8_snorm() { return 89; }
function int GLSL_Qualifier_Rg16_snorm() { return 90; }
function int GLSL_Qualifier_Rg8_snorm() { return 91; }
function int GLSL_Qualifier_R16_snorm() { return 92; }
function int GLSL_Qualifier_R8_snorm() { return 93; }
function int GLSL_Qualifier_Rgba32i() { return 94; }
function int GLSL_Qualifier_Rgba16i() { return 95; }
function int GLSL_Qualifier_Rgba8i() { return 96; }
function int GLSL_Qualifier_Rg32i() { return 97; }
function int GLSL_Qualifier_Rg16i() { return 98; }
function int GLSL_Qualifier_Rg8i() { return 99; }
function int GLSL_Qualifier_R32i() { return 100; }
function int GLSL_Qualifier_R16i() { return 101; }
function int GLSL_Qualifier_R8i() { return 102; }
function int GLSL_Qualifier_Rgba32ui() { return 103; }
function int GLSL_Qualifier_Rgba16ui() { return 104; }
function int GLSL_Qualifier_Rgb10_a2ui() { return 105; }
function int GLSL_Qualifier_Rgba8ui() { return 106; }
function int GLSL_Qualifier_Rg32ui() { return 107; }
function int GLSL_Qualifier_Rg16ui() { return 108; }
function int GLSL_Qualifier_Rg8ui() { return 109; }
function int GLSL_Qualifier_R32ui() { return 110; }
function int GLSL_Qualifier_R16ui() { return 111; }
function int GLSL_Qualifier_R8ui() { return 112; }
function int GLSL_Qualifier_Local_Size_X() { return 113; }
function int GLSL_Qualifier_Local_Size_Y() { return 114; }
function int GLSL_Qualifier_Local_Size_Z() { return 115; }
function int GLSL_Qualifier_Inout() { return 116; }
function int GLSL_QualifierCategory_None() { return 0; }
function int GLSL_QualifierCategory_Auxiliary() { return 1; }
function int GLSL_QualifierCategory_ControlOutPrimitive() { return 2; }
function int GLSL_QualifierCategory_EvaluationIn() { return 3; }
function int GLSL_QualifierCategory_EvaluationInPrimitive() { return 4; }
function int GLSL_QualifierCategory_EvaluationInSpacing() { return 5; }
function int GLSL_QualifierCategory_EvaluationInWinding() { return 6; }
function int GLSL_QualifierCategory_FragCoordIn() { return 7; }
function int GLSL_QualifierCategory_FragDepthOut() { return 8; }
function int GLSL_QualifierCategory_FragmentIn() { return 9; }
function int GLSL_QualifierCategory_FragmentOut() { return 10; }
function int GLSL_QualifierCategory_GeometryIn() { return 11; }
function int GLSL_QualifierCategory_GeometryInPrimitive() { return 12; }
function int GLSL_QualifierCategory_GeometryOut() { return 13; }
function int GLSL_QualifierCategory_GeometryOutPrimitive() { return 14; }
function int GLSL_QualifierCategory_Interpolation() { return 15; }
function int GLSL_QualifierCategory_Invariant() { return 16; }
function int GLSL_QualifierCategory_Location() { return 17; }
function int GLSL_QualifierCategory_Memory() { return 18; }
function int GLSL_QualifierCategory_Orientation() { return 19; }
function int GLSL_QualifierCategory_Packing() { return 20; }
function int GLSL_QualifierCategory_Precise() { return 21; }
function int GLSL_QualifierCategory_Precision() { return 22; }
function int GLSL_QualifierCategory_ReadWrite() { return 23; }
function int GLSL_QualifierCategory_Storage() { return 24; }
function int GLSL_QualifierCategory_TransformFeedback() { return 25; }
function int GLSL_QualifierCategory_OpaqueType() { return 26; }
function int GLSL_QualifierCategory_Compute() { return 27; }
function int GLSL_QualifierCategory_Binding() { return 28; }
function int GLSL_QualifierCategory_Offset() { return 29; }
function int GLSL_QualifierCategory_Index() { return 30; }
function int GLSL_QualifierCategory_Component() { return 31; }
function int GLSL_QualifierCategory_Coherent() { return 32; }
function int GLSL_QualifierCategory_Volatile() { return 33; }
function int GLSL_QualifierCategory_Restrict() { return 34; }
function int GLSL_QualifierCategory_ReadOnly() { return 35; }
function int GLSL_QualifierCategory_WriteOnly() { return 36; }
function int GLSL_QualifierCategory_XfbBuffer() { return 37; }
function int GLSL_QualifierCategory_XfbOffset() { return 38; }
function int GLSL_QualifierCategory_XfbStride() { return 39; }
function int GLSL_QualifierCategory_Local_Size_X() { return 40; }
function int GLSL_QualifierCategory_Local_Size_Y() { return 41; }
function int GLSL_QualifierCategory_Local_Size_Z() { return 42; }
function int GLSL_QualifierCategory_Align() { return 43; }
function int GLSL_QualifierCategory_Subroutine() { return 44; }
function int GLSL_QualifierCategory_Max() { return 45; }
function int GLSL_InterpolationQualifier_None() { return 0; }
function int GLSL_InterpolationQualifier_Smooth() { return 1; }
function int GLSL_InterpolationQualifier_Flat() { return 2; }
function int GLSL_InterpolationQualifier_NoPerspective() { return 3; }
function int GLSL_StorageQualifier_None() { return 0; }
function int GLSL_StorageQualifier_Local() { return 1; }
function int GLSL_StorageQualifier_Const() { return 2; }
function int GLSL_StorageQualifier_Inout() { return 3; }
function int GLSL_StorageQualifier_In() { return 4; }
function int GLSL_StorageQualifier_Out() { return 5; }
function int GLSL_StorageQualifier_Uniform() { return 6; }
function int GLSL_StorageQualifier_Buffer() { return 7; }
function int GLSL_StorageQualifier_CompilerDirective() { return 8; }
function int GLSL_StorageQualifier_Attribute() { return 9; }
function int GLSL_StorageQualifier_Varying() { return 10; }
function int GLSL_OpaqueTypeLayoutQualifier_Size1x8() { return 0; }
function int GLSL_OpaqueTypeLayoutQualifier_Size1x16() { return 1; }
function int GLSL_OpaqueTypeLayoutQualifier_Size1x32() { return 2; }
function int GLSL_OpaqueTypeLayoutQualifier_Size2x32() { return 3; }
function int GLSL_OpaqueTypeLayoutQualifier_Size4x32() { return 4; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba32f() { return 5; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba16f() { return 6; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg32f() { return 7; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg16f() { return 8; }
function int GLSL_OpaqueTypeLayoutQualifier_R11f_g11f_b10f() { return 9; }
function int GLSL_OpaqueTypeLayoutQualifier_R32f() { return 10; }
function int GLSL_OpaqueTypeLayoutQualifier_R16f() { return 11; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba16() { return 12; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgb10_a2() { return 13; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba8() { return 14; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg16() { return 15; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg8() { return 16; }
function int GLSL_OpaqueTypeLayoutQualifier_R16() { return 17; }
function int GLSL_OpaqueTypeLayoutQualifier_R8() { return 18; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba16_snorm() { return 19; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba8_snorm() { return 20; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg16_snorm() { return 21; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg8_snorm() { return 22; }
function int GLSL_OpaqueTypeLayoutQualifier_R16_snorm() { return 23; }
function int GLSL_OpaqueTypeLayoutQualifier_R8_snorm() { return 24; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba32i() { return 25; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba16i() { return 26; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba8i() { return 27; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg32i() { return 28; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg16i() { return 29; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg8i() { return 30; }
function int GLSL_OpaqueTypeLayoutQualifier_R32i() { return 31; }
function int GLSL_OpaqueTypeLayoutQualifier_R16i() { return 32; }
function int GLSL_OpaqueTypeLayoutQualifier_R8i() { return 33; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba32ui() { return 34; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba16ui() { return 35; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgb10_a2ui() { return 36; }
function int GLSL_OpaqueTypeLayoutQualifier_Rgba8ui() { return 37; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg32ui() { return 38; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg16ui() { return 39; }
function int GLSL_OpaqueTypeLayoutQualifier_Rg8ui() { return 40; }
function int GLSL_OpaqueTypeLayoutQualifier_R32ui() { return 41; }
function int GLSL_OpaqueTypeLayoutQualifier_R16ui() { return 42; }
function int GLSL_OpaqueTypeLayoutQualifier_R8ui() { return 43; }
function int GLSL_DataType_None() { return 0; }
function int GLSL_DataType_Bool() { return 1; }
function int GLSL_DataType_Int() { return 1; }
function int GLSL_DataType_Float() { return 1; }
function int GLSL_DataType_Double() { return 1; }
function int GLSL_DataType_Struct() { return -32; }
function int GLSL_DataType_Void() { return 1; }
function int GLSL_DataType_Vec2() { return 2; }
function int GLSL_DataType_Vec3() { return 3; }
function int GLSL_DataType_Vec4() { return 4; }
function int GLSL_DataType_Mat2() { return -4; }
function int GLSL_DataType_Mat3() { return 9; }
function int GLSL_DataType_Mat4() { return 16; }
function int GLSL_DataType_Dmat2() { return 4; }
function int GLSL_DataType_Dmat3() { return 9; }
function int GLSL_DataType_Dmat4() { return 16; }
function int GLSL_DataType_Mat2x2() { return -4; }
function int GLSL_DataType_Mat2x3() { return -6; }
function int GLSL_DataType_Mat2x4() { return -8; }
function int GLSL_DataType_Dmat2x2() { return -4; }
function int GLSL_DataType_Dmat2x3() { return -6; }
function int GLSL_DataType_Dmat2x4() { return -8; }
function int GLSL_DataType_Mat3x2() { return 6; }
function int GLSL_DataType_Mat3x3() { return 9; }
function int GLSL_DataType_Mat3x4() { return -12; }
function int GLSL_DataType_Dmat3x2() { return 6; }
function int GLSL_DataType_Dmat3x3() { return 9; }
function int GLSL_DataType_Dmat3x4() { return -12; }
function int GLSL_DataType_Mat4x2() { return 8; }
function int GLSL_DataType_Mat4x3() { return 12; }
function int GLSL_DataType_Mat4x4() { return 16; }
function int GLSL_DataType_Dmat4x2() { return 8; }
function int GLSL_DataType_Dmat4x3() { return 12; }
function int GLSL_DataType_Dmat4x4() { return 16; }
function int GLSL_DataType_Ivec2() { return 2; }
function int GLSL_DataType_Ivec3() { return 3; }
function int GLSL_DataType_Ivec4() { return 4; }
function int GLSL_DataType_Bvec2() { return 2; }
function int GLSL_DataType_Bvec3() { return 3; }
function int GLSL_DataType_Bvec4() { return 4; }
function int GLSL_DataType_Dvec2() { return 2; }
function int GLSL_DataType_Dvec3() { return 3; }
function int GLSL_DataType_Dvec4() { return 4; }
function int GLSL_DataType_Uint() { return 1; }
function int GLSL_DataType_Uvec2() { return 2; }
function int GLSL_DataType_Uvec3() { return 3; }
function int GLSL_DataType_Uvec4() { return 4; }
function int GLSL_DataType_Sampler1D() { return 1; }
function int GLSL_DataType_Sampler2D() { return 1; }
function int GLSL_DataType_Sampler3D() { return 1; }
function int GLSL_DataType_SamplerCube() { return 1; }
function int GLSL_DataType_Sampler1DShadow() { return 1; }
function int GLSL_DataType_Sampler2DShadow() { return 1; }
function int GLSL_DataType_SamplerCubeShadow() { return 1; }
function int GLSL_DataType_Sampler1DArray() { return 1; }
function int GLSL_DataType_Sampler2DArray() { return 1; }
function int GLSL_DataType_Sampler1DArrayShadow() { return 1; }
function int GLSL_DataType_Sampler2DArrayShadow() { return 1; }
function int GLSL_DataType_Isampler1D() { return 1; }
function int GLSL_DataType_Isampler2D() { return 1; }
function int GLSL_DataType_Isampler3D() { return 1; }
function int GLSL_DataType_IsamplerCube() { return 1; }
function int GLSL_DataType_Isampler1DArray() { return 1; }
function int GLSL_DataType_Isampler2DArray() { return 1; }
function int GLSL_DataType_Usampler1D() { return 1; }
function int GLSL_DataType_Usampler2D() { return 1; }
function int GLSL_DataType_Usampler3D() { return 1; }
function int GLSL_DataType_UsamplerCube() { return 1; }
function int GLSL_DataType_Usampler1DArray() { return 1; }
function int GLSL_DataType_Usampler2DArray() { return 1; }
function int GLSL_DataType_Sampler2DRect() { return 1; }
function int GLSL_DataType_Sampler2DRectShadow() { return 1; }
function int GLSL_DataType_Isampler2DRect() { return 1; }
function int GLSL_DataType_Usampler2DRect() { return 1; }
function int GLSL_DataType_SamplerBuffer() { return 1; }
function int GLSL_DataType_IsamplerBuffer() { return 1; }
function int GLSL_DataType_UsamplerBuffer() { return 1; }
function int GLSL_DataType_Sampler2DMS() { return 1; }
function int GLSL_DataType_Isampler2DMS() { return 1; }
function int GLSL_DataType_Usampler2DMS() { return 1; }
function int GLSL_DataType_Sampler2DMSArray() { return 1; }
function int GLSL_DataType_Isampler2DMSArray() { return 1; }
function int GLSL_DataType_Usampler2DMSArray() { return 1; }
function int GLSL_DataType_SamplerCubeArray() { return 1; }
function int GLSL_DataType_SamplerCubeArrayShadow() { return 1; }
function int GLSL_DataType_IsamplerCubeArray() { return 1; }
function int GLSL_DataType_UsamplerCubeArray() { return 1; }
function int GLSL_DataType_Image1D() { return 1; }
function int GLSL_DataType_Iimage1D() { return 1; }
function int GLSL_DataType_Uimage1D() { return 1; }
function int GLSL_DataType_Image2D() { return 1; }
function int GLSL_DataType_Iimage2D() { return 1; }
function int GLSL_DataType_Uimage2D() { return 1; }
function int GLSL_DataType_Image3D() { return 1; }
function int GLSL_DataType_Iimage3D() { return 1; }
function int GLSL_DataType_Uimage3D() { return 1; }
function int GLSL_DataType_Image2DRect() { return 1; }
function int GLSL_DataType_Iimage2DRect() { return 1; }
function int GLSL_DataType_Uimage2DRect() { return 1; }
function int GLSL_DataType_ImageCube() { return 1; }
function int GLSL_DataType_IimageCube() { return 1; }
function int GLSL_DataType_UimageCube() { return 1; }
function int GLSL_DataType_ImageBuffer() { return 1; }
function int GLSL_DataType_IimageBuffer() { return 1; }
function int GLSL_DataType_UimageBuffer() { return 1; }
function int GLSL_DataType_Image1DArray() { return 1; }
function int GLSL_DataType_Iimage1DArray() { return 1; }
function int GLSL_DataType_Uimage1DArray() { return 1; }
function int GLSL_DataType_Image2DArray() { return 1; }
function int GLSL_DataType_Iimage2DArray() { return 1; }
function int GLSL_DataType_Uimage2DArray() { return 1; }
function int GLSL_DataType_ImageCubeArray() { return 1; }
function int GLSL_DataType_IimageCubeArray() { return 1; }
function int GLSL_DataType_UimageCubeArray() { return 1; }
function int GLSL_DataType_Image2DMS() { return 1; }
function int GLSL_DataType_Iimage2DMS() { return 1; }
function int GLSL_DataType_Uimage2DMS() { return 1; }
function int GLSL_DataType_Image2DMSArray() { return 1; }
function int GLSL_DataType_Iimage2DMSArray() { return 1; }
function int GLSL_DataType_Uimage2DMSArray() { return 1; }
function int ShadingLanguageVersion_110() { return 0; }
function int ShadingLanguageVersion_120() { return 1; }
function int ShadingLanguageVersion_130() { return 2; }
function int ShadingLanguageVersion_140() { return 3; }
function int ShadingLanguageVersion_150() { return 4; }
function int ShadingLanguageVersion_330() { return 5; }
function int ShadingLanguageVersion_400() { return 6; }
function int ShadingLanguageVersion_410() { return 7; }
function int ShadingLanguageVersion_420() { return 8; }
function int ShadingLanguageVersion_430() { return 9; }
function int ShadingLanguageVersion_440() { return 10; }
function int ShadingLanguageVersion_450() { return 11; }
function int ShadingLanguageVersion_Max() { return 12; }
function int Sampler1D() { return 0; }
function int Sampler2D() { return 1; }
function int Sampler3D() { return 2; }
function int SamplerCube() { return 3; }
function int Sampler1DShadow() { return 4; }
function int Sampler2DShadow() { return 5; }
function int Sampler2DArray() { return 6; }
function int SamplerCubeArray() { return 7; }
function int SamplerCubeShadow() { return 8; }
function int VariableMode_None() { return 0; }
function int VariableMode_Scalar() { return 1; }
function int VariableMode_Vector() { return 2; }
function int VariableMode_Matrix() { return 3; }
function int VariableMode_Array() { return 4; }
function int VariableMode_Max() { return 5; }
function int ExpressionMode_None() { return 0; }
function int ExpressionMode_Scalar() { return 1; }
function int ExpressionMode_Vector() { return 2; }
function int ExpressionMode_Matrix() { return 3; }
function int ExpressionMode_Array() { return 4; }
function int ExpressionMode_Struct() { return 5; }
function int ExpressionMode_Sampler() { return 6; }
function int ExpressionMode_Max() { return 7; }
function int ParameterStorageQualifier_None() { return 0; }
function int ParameterStorageQualifier_ConstIn() { return 1; }
function int ParameterStorageQualifier_In() { return 2; }
function int ParameterStorageQualifier_Out() { return 3; }
function int ParameterStorageQualifier_Inout() { return 4; }
function int ParameterStorageQualifier_Max() { return 5; }
function int ParameterPreciseQualifier_None() { return 0; }
function int ParameterPreciseQualifier_Precise() { return 1; }
function int ParameterPreciseQualifier_Max() { return 2; }
function int ParameterMemoryQualifier_None() { return 0; }
function int ParameterMemoryQualifier_ReadOnly() { return 1; }
function int ParameterMemoryQualifier_WriteOnly() { return 2; }
function int ParameterMemoryQualifier_ReadOnlyWriteOnly() { return 3; }
function int ParameterMemoryQualifier_Coherent() { return 4; }
function int ParameterMemoryQualifier_Volatile() { return 5; }
function int ParameterMemoryQualifier_Restrict() { return 6; }
function int ParameterMemoryQualifier_Max() { return 7; }
function int ParameterPrecisionQualifier_None() { return 0; }
function int ParameterPrecisionQualifier_Lowp() { return 1; }
function int ParameterPrecisionQualifier_Mediump() { return 2; }
function int ParameterPrecisionQualifier_Highp() { return 3; }
function int ParameterPrecisionQualifier_Max() { return 4; }
function int DataSourceMemberFunction_None() { return 0; }
function int DataSourceMemberFunction_Length() { return 1; }
function int DataSourceMemberFunction_Max() { return 2; }
function int NamespaceLinkCodes_None() { return 0; }
function int NamespaceLinkCodes_DataSourceIsBad() { return 1; }
function int NamespaceLinkCodes_Max() { return 2; }
function int AppScaffoldPathIndex_AppFilePath() { return 0; }
function int AppScaffoldPathIndex_XML() { return 1; }
function int AppScaffoldPathIndex_Icon() { return 2; }
function int AppScaffoldPathIndex_Splash() { return 3; }
function int AppScaffoldPathIndex_Database() { return 4; }
function int AppScaffoldPathIndex_Max() { return 5; }
function int AppScaffoldPathMax() { return 0; }
function int AppPathIndex_AppFilePath() { return 0; }
function int AppPathIndex_XML() { return 1; }
function int AppPathIndex_Icon() { return 2; }
function int AppPathIndex_Splash() { return 3; }
function int AppPathIndex_Database() { return 4; }
function int AppPathIndex_Max() { return 5; }
function int AppPathMax() { return 0; }
function int DefaultPath_None() { return 0; }
function int DefaultPath_ApplicationBinariesPath() { return 1; }
function int DefaultPath_ApplicationDataPath() { return 2; }
function int DefaultPath_ApplicationDocumentsPath() { return 3; }
function int DefaultPath_CurrentDocumentFolder() { return 4; }
function int DefaultPath_Max() { return 5; }
function int ConfigDependencySlot_0() { return 0; }
function int ConfigDependencySlot_1() { return 1; }
function int ConfigDependencySlot_2() { return 2; }
function int ConfigDependencySlot_3() { return 3; }
function int ConfigDependencySlot_4() { return 4; }
function int ConfigDependencySlot_5() { return 5; }
function int ConfigDependencySlot_6() { return 6; }
function int ConfigDependencySlot_7() { return 7; }
function int ConfigDependencyCount_Max() { return 8; }
function int BuildModeOption_Debug() { return 0; }
function int BuildModeOption_Release() { return 1; }
function int BuildModeOption_Max() { return 2; }
function int PropertyItemType_Object() { return 0; }
function int PropertyItemType_Bool() { return 1; }
function int PropertyItemType_Int() { return 2; }
function int PropertyItemType_String() { return 3; }
function int PropertyItemType_Float() { return 4; }
function int PropertyItemType_Double() { return 5; }
function int PropertyItemType_Coord() { return 6; }
function int PropertyItemType_Enumeration() { return 7; }
function int PropertyItemType_EnumerationItem() { return 8; }
function int PropertyItemType_FilePath() { return 9; }
function int PropertyItemType_NodeReference() { return 10; }
function int PropertyItemType_Color() { return 11; }
function int PropertyItemType_Uint() { return 12; }
function int PropertyItemType_Guid() { return 13; }
function int PropertyItemType_Max() { return 14; }
function int ExtensionMode_Require() { return 0; }
function int ExtensionMode_Warn() { return 1; }
function int ExtensionMode_Enable() { return 2; }
function int ExtensionMode_Disable() { return 3; }
function int TypeCheckingModes_None() { return 0; }
function int TypeCheckingModes_Derived() { return 1; }
function int TypeCheckingModes_TypeOf() { return 2; }
function int TypeCheckingModes_Max() { return 3; }
function int TemplateModes_None() { return 0; }
function int TemplateModes_ChildType() { return 1; }
function int TemplateModes_MustExist() { return 2; }
function int TemplateModes_Max() { return 3; }
function int SequenceModes_None() { return 0; }
function int SequenceModes_ExplicitSize() { return 1; }
function int SequenceModes_ImplicitSize() { return 2; }
function int SequenceModes_Max() { return 3; }
function int HelpAttribIndex_CompanyName() { return 0; }
function int HelpAttribIndex_CompanyURL() { return 1; }
function int HelpAttribIndex_Author() { return 2; }
function int HelpAttribIndex_ModuleCreator() { return 3; }
function int HelpAttribIndex_IndexFile() { return 4; }
function int HelpAttribIndex_HelpAddress() { return 5; }
function int HelpAttribIndex_ServerRoot() { return 6; }
function int HelpAttribIndex_ScriptExternalDocs() { return 7; }
function int HelpAttribIndex_ScriptOutputDocs() { return 8; }
function int HelpAttribIndex_RemoteServerRoot() { return 9; }
function int HelpAttribIndex_HelpTitle() { return 10; }
function int HelpAttribIndex_Reserved5() { return 11; }
function int HelpAttribIndex_Max() { return 12; }
function int HelpPathMax() { return 0; }
function int InterfaceElements_Interface() { return 0; }
function int InterfaceElements_Menu() { return 1; }
function int InterfaceElements_Popup() { return 2; }
function int InterfaceElements_Item() { return 3; }
function int InterfaceElements_Separator() { return 4; }
function int InterfaceElements_Dockbar() { return 5; }
function int InterfaceElements_DockedView() { return 6; }
function int InterfaceElements_ActiveView() { return 7; }
function int InterfaceElements_Toolbar() { return 8; }
function int InterfaceElements_ContextMenu() { return 9; }
function int InterfaceElements_Keyboard() { return 10; }
function int InterfaceElements_Accelerator() { return 11; }
function int InterfaceElements_Max() { return 12; }
function int ElementAttributes_Name() { return 0; }
function int ElementAttributes_Guid() { return 1; }
function int ElementAttributes_Class() { return 2; }
function int ElementAttributes_Keys() { return 3; }
function int ElementAttributes_Version() { return 4; }
function int ElementAttributes_DockPosition() { return 5; }
function int ElementAttributes_CommandName() { return 6; }
function int ElementAttributes_Max() { return 7; }
function int InterfaceSection_Menu() { return 0; }
function int InterfaceSection_ContextMenu() { return 1; }
function int InterfaceSection_Toolbar() { return 2; }
function int InterfaceSection_Dockbar() { return 3; }
function int InterfaceSection_Keyboard() { return 4; }
function int InterfaceSection_Max() { return 5; }
function int ContextMenuCategory_None() { return 0; }
function int ContextMenuCategory_Selection() { return 1; }
function int ContextMenuCategory_DrawMode() { return 2; }
function int ContextMenuCategory_Max() { return 3; }
function int JumpStatement_Continue() { return 0; }
function int JumpStatement_Break() { return 1; }
function int JumpStatement_Return() { return 2; }
function int JumpStatement_Discard() { return 3; }
function int JumpStatement_Max() { return 4; }
function int LightBooleanMode_None() { return 0; }
function int LightBooleanMode_On() { return 1; }
function int LightBooleanMode_Global() { return 2; }
function int LightBooleanMode_Shadows() { return 3; }
function int LightBooleanMode_Dynamic() { return 4; }
function int LightBooleanMode_Infinite() { return 5; }
function int LightBooleanMode_Point() { return 6; }
function int LightBooleanMode_Spot() { return 7; }
function int LCM_None() { return 0; }
function int LCM_LightAmbientColor() { return 1; }
function int LCM_LightDiffuseColor() { return 2; }
function int LCM_LightSpecularColor() { return 3; }
function int LCM_LightEmissiveColor() { return 4; }
function int LightCountMode_None() { return 0; }
function int LightCountMode_ActiveLightCount() { return 1; }
function int LightCountMode_Max() { return 2; }
function int LightFloatMode_None() { return 0; }
function int LightFloatMode_SpotExponent() { return 1; }
function int LightFloatMode_SpotCutoff() { return 2; }
function int LightFloatMode_SpotCosCutoff() { return 3; }
function int LightFloatMode_ConstantAttenuation() { return 4; }
function int LightFloatMode_LinearAttenuation() { return 5; }
function int LightFloatMode_QuadraticAttenuation() { return 6; }
function int LightFloatMode_Intensity() { return 7; }
function int LightFloatMode_PrimarySize() { return 8; }
function int LightFloatMode_SecondarySize() { return 9; }
function int LightIntegerMode_None() { return 0; }
function int LightIntegerMode_On() { return 1; }
function int LightIntegerMode_Global() { return 2; }
function int LightIntegerMode_Shadows() { return 3; }
function int LightIntegerMode_Dynamic() { return 4; }
function int LightIntegerMode_Infinite() { return 5; }
function int LightIntegerMode_Point() { return 6; }
function int LightIntegerMode_Spot() { return 7; }
function int LightIntegerMode_LightMode() { return 8; }
function int LightIntegerMode_Shape() { return 9; }
function int LMM_None() { return 0; }
function int LMM_LightModelViewCamera() { return 1; }
function int LMM_LightModelView() { return 2; }
function int LMM_LightProjectionCamera() { return 3; }
function int LMM_LightProjection() { return 4; }
function int LMM_LightProjectionInverse() { return 5; }
function int LMM_LightView() { return 6; }
function int LMM_LightCamera() { return 7; }
function int LMM_LightViewLocal() { return 8; }
function int LMM_LightLocal() { return 9; }
function int LVM_None() { return 0; }
function int LVM_LightNearFarClipPlane() { return 1; }
function int LVM_LightPosition() { return 2; }
function int LVM_LightDirection() { return 3; }
function int LVM_LightTransformX() { return 4; }
function int LVM_LightTransformY() { return 5; }
function int LVM_LightTransformZ() { return 6; }
function int LVM_LightTransformT() { return 7; }
function int MCM_None() { return 0; }
function int MCM_AmbientColor() { return 1; }
function int MCM_DiffuseColor() { return 2; }
function int MCM_SpecularColor() { return 3; }
function int MCM_EmissiveColor() { return 4; }
function int MCM_IdentificationColor() { return 5; }
function int MaterialFloatMode_None() { return 0; }
function int MaterialFloatMode_Opacity() { return 1; }
function int MaterialFloatMode_Shininess() { return 2; }
function int MaterialIntegerModes_None() { return 0; }
function int MaterialIntegerModes_MaterialIdentification() { return 1; }
function int MaterialIntegerModes_MaterialTransparent() { return 2; }
function int MaterialIntegerModes_ImageWrites() { return 3; }
function int MaterialIntegerModes_TwoSided() { return 4; }
function int MaterialIntegerModes_HSRWritesEnabled() { return 5; }
function int MaterialIntegerModes_HSRTestsEnabled() { return 6; }
function int MaterialIntegerModes_ClampS() { return 7; }
function int MaterialIntegerModes_ClampT() { return 8; }
function int MaterialIntegerModes_AlphaTestFunction() { return 9; }
function int MaterialIntegerModes_Wireframe() { return 10; }
function int MaterialIntegerModes_Filled() { return 11; }
function int MaterialIntegerModes_Solid() { return 12; }
function int MaterialIntegerModes_Textured() { return 13; }
function int MeshBooleanMode_None() { return 0; }
function int MeshBooleanMode_MeshVertex() { return 1; }
function int MeshBooleanMode_MeshVertexNormal() { return 2; }
function int MeshBooleanMode_MeshFaceNormal() { return 3; }
function int MeshBooleanMode_MeshEdges() { return 4; }
function int MeshBooleanMode_MeshHiddenEdges() { return 5; }
function int MeshBooleanMode_MAX() { return 6; }
function int InstallerDestinationFolder_None() { return 0; }
function int InstallerDestinationFolder_App() { return 1; }
function int InstallerDestinationFolder_UserDocs() { return 2; }
function int InstallerDestinationFolder_UserAppData() { return 3; }
function int InstallerDestinationFolder_Max() { return 4; }
function int PreprocessorMode_Pragma() { return 0; }
function int PreprocessorMode_Define() { return 1; }
function int PreprocessorMode_Undef() { return 2; }
function int PreprocessorMode_Version() { return 3; }
function int PreprocessorMode_Include() { return 4; }
function int PreprocessorMode_Line() { return 5; }
function int PreprocessorMode_Error() { return 6; }
function int PreprocessorMode_Defined() { return 7; }
function int PreprocessorMode_DoublePound() { return 8; }
function int PreprocessorMode_Else() { return 9; }
function int PreprocessorMode_If() { return 10; }
function int PreprocessorMode_Endif() { return 11; }
function int PreprocessorMode_Elif() { return 12; }
function int PreprocessorMode_Ifdef() { return 13; }
function int PreprocessorMode_Ifndef() { return 14; }
function int PreprocessorMode_Max() { return 15; }
function int CodeGenerationScope_Global() { return 0; }
function int CodeGenerationScope_Vertex() { return 1; }
function int CodeGenerationScope_Control() { return 2; }
function int CodeGenerationScope_Evaluation() { return 3; }
function int CodeGenerationScope_Geometry() { return 4; }
function int CodeGenerationScope_Fragment() { return 5; }
function int CodeGenerationScope_Max() { return 6; }
function int VersionTestExpression_GreaterThan() { return 0; }
function int VersionTestExpression_LessThan() { return 1; }
function int VersionTestExpression_GreaterThanOrEqual() { return 2; }
function int VersionTestExpression_LessThanOrEqual() { return 3; }
function int VersionTestExpression_IsEqual() { return 4; }
function int VersionTestExpression_NotEqual() { return 5; }
function int VersionTestExpression_Max() { return 6; }
function int InstallerSections_Code() { return 0; }
function int InstallerSections_Components() { return 1; }
function int InstallerSections_CustomMessages() { return 2; }
function int InstallerSections_Dirs() { return 3; }
function int InstallerSections_Files() { return 4; }
function int InstallerSections_Icons() { return 5; }
function int InstallerSections_INI() { return 6; }
function int InstallerSections_InstallDelete() { return 7; }
function int InstallerSections_LangOptions() { return 8; }
function int InstallerSections_Languages() { return 9; }
function int InstallerSections_Messages() { return 10; }
function int InstallerSections_Registry() { return 11; }
function int InstallerSections_Run() { return 12; }
function int InstallerSections_Setup() { return 13; }
function int InstallerSections_Tasks() { return 14; }
function int InstallerSections_Types() { return 15; }
function int InstallerSections_UninstallDelete() { return 16; }
function int InstallerSections_UninstallRun() { return 17; }
function int InstallerSections_Max() { return 18; }
function int SubroutineIntegerMode_None() { return 0; }
function int SubroutineIntegerMode_Variation() { return 1; }
function int TypeRepOptions_Type() { return 0; }
function int TypeRepOptions_Documentation() { return 1; }
function int TypeRepOptions_Module() { return 2; }
function int TypeRepOptions_Implementation() { return 3; }
function int TypeRepOptions_DataInterfaceName() { return 4; }
function int TypeRepOptions_Max() { return 5; }
function int NodeElementType_None() { return 0; }
function int NodeElementType_Face() { return 1; }
function int NodeElementType_Edge() { return 2; }
function int NodeElementType_Vertex() { return 3; }
function int NodeElementType_Segment() { return 4; }
function int NodeElementType_Point() { return 5; }
function int NodeElementType_Generic() { return 6; }
function int NodeElementType_Max() { return 7; }
function int VFM_None() { return 0; }
function int VFM_ViewportWidth() { return 1; }
function int VFM_ViewportHeight() { return 2; }
function int VFM_ViewportWidthInverse() { return 3; }
function int VFM_ViewportHeightInverse() { return 4; }
function int VFM_NearClipPlane() { return 5; }
function int VFM_FarClipPlane() { return 6; }
function int VFM_FieldofView() { return 7; }
function int VFM_ViewportLeft() { return 8; }
function int VFM_ViewportTop() { return 9; }
function int VFM_FrameWidth() { return 10; }
function int VFM_FrameHeight() { return 11; }
function int VFM_Max() { return 12; }
function int VMM_None() { return 0; }
function int VMM_Model() { return 1; }
function int VMM_ModelInverse() { return 2; }
function int VMM_ModelInverseTranspose() { return 3; }
function int VMM_ModelTranspose() { return 4; }
function int VMM_ModelView() { return 5; }
function int VMM_ModelViewInverse() { return 6; }
function int VMM_ModelViewInverseTranspose() { return 7; }
function int VMM_ModelViewTranspose() { return 8; }
function int VMM_ModelViewProjection() { return 9; }
function int VMM_ModelViewProjectionInverse() { return 10; }
function int VMM_ModelViewProjectionInverseTranspose() { return 11; }
function int VMM_ModelViewProjectionTranspose() { return 12; }
function int VMM_Projection() { return 13; }
function int VMM_ProjectionInverse() { return 14; }
function int VMM_ProjectionInverseTranspose() { return 15; }
function int VMM_ProjectionTranspose() { return 16; }
function int VMM_View() { return 17; }
function int VMM_ViewInverse() { return 18; }
function int VMM_ViewInverseTranspose() { return 19; }
function int VMM_ViewTranspose() { return 20; }
function int VMM_ViewProjection() { return 21; }
function int VMM_ViewProjectionInverse() { return 22; }
function int VMM_ViewProjectionInverseTranspose() { return 23; }
function int VMM_ViewProjectionTranspose() { return 24; }
function int VMM_PreviousViewProjection() { return 25; }
function int VMM_TextureMatrix() { return 26; }
function int VMM_NormalMatrix() { return 27; }
function int VMM_Max() { return 28; }
function int VVM_None() { return 0; }
function int VVM_ViewportNearFarClipPlane() { return 1; }
function int VVM_ViewportWidthHeight() { return 2; }
function int VVM_ViewportWidthHeightNearFarClip() { return 3; }
function int VVM_ViewportWidthHeightInverse() { return 4; }
function int VVM_FrameWidthHeight() { return 5; }
function int VVM_FrameWidthHeightInverse() { return 6; }
function int VVM_ViewPosition() { return 7; }
function int VVM_ViewOrientation() { return 8; }
function int TypeStatusOption_Deprecated() { return 0; }
function int TypeStatusOption_Compatibility() { return 1; }
function int TypeStatusOption_Active() { return 2; }
function int TypeStatusOption_Max() { return 3; }
function int CommandStatusOption_Removed() { return 0; }
function int CommandStatusOption_Deprecated() { return 1; }
function int CommandStatusOption_Compatibility() { return 2; }
function int CommandStatusOption_Active() { return 3; }
function int CommandStatusOption_Disabled() { return 4; }
function int CommandStatusOption_Max() { return 5; }
function int CommandModeOption_Release() { return 0; }
function int CommandModeOption_Debug() { return 1; }
function int CommandModeOption_Max() { return 2; }
function int ElementStatus_NotFinalType() { return 0; }
function int ElementStatus_Deprecated() { return 1; }
function int ElementStatus_Compatibility() { return 2; }
function int ElementStatus_Active() { return 3; }
function int ElementStatus_Disabled() { return 4; }
function int ElementStatus_Removed() { return 5; }
function int ElementStatus_Max() { return 6; }
