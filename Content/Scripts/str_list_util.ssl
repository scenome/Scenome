////////////////////////////////////////////////////////////////////////////////
// $file             STR_LIST_UTIL.SSL
// $author           Scenomics LLC
// $privacy          PUBLIC
// $description      This script implements StrList helper functions.
// $legal            Reserved * r_rLegal
//
// Copyright 2004-2014 Scenomics LLC. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////

library SpaStrListUtil;

////////////////////////////////////////////////////////////////////////////////
//  function
////////////////////////////////////////////////////////////////////////////////

function void SendToOutput( StrList p_slSourceList )
{
   Console.Message( "STR LIST OUTPUT generated by STR_LIST_UTIL.SSL" );

   for( int i = 0; i < p_slSourceList.GetCount(); ++i )
   {
      Console.Message( p_slSourceList.GetAt(i) );
   }
}

////////////////////////////////////////////////////////////////////////////////
//  function
////////////////////////////////////////////////////////////////////////////////

function void Out( StrList p_slSourceList )
{
   SendToOutput( p_slSourceList );
}

////////////////////////////////////////////////////////////////////////////////
//  function
////////////////////////////////////////////////////////////////////////////////

function void SetConsistentWidth( StrList p_slSourceList, StrList p_slDestList )
{
   int a_iMaxLength = 0;
   bool a_bMax;
   for( int i = 0; i < p_slSourceList.GetCount(); ++i )
   {
      auto Str a_oListItem = new Str( p_slSourceList.Get( i ) );
      a_iMaxLength = a_oListItem.Length();

      for( int j = 0; j < p_slSourceList.GetCount(); ++j )
      {
         auto Str a_oCompareItem = new Str( p_slSourceList.Get( j ) );

         if( a_iMaxLength >= a_oCompareItem.Length() )
         {
            a_bMax = true;
         }
         else
         {
            a_bMax = false;
            a_iMaxLength = a_oCompareItem.Length();
         }
      }

      if( a_bMax = true )
      {
         break;
      }
   }

   for( int k = 0; k < p_slSourceList.GetCount(); ++k )
   {
      auto Str a_oAppendInto = new Str( p_slSourceList.Get( k ) );
      if( a_oAppendInto.Length() < a_iMaxLength )
      {
         int a_iGuard = a_iMaxLength - a_oAppendInto.Length();

         for( int l = 0; l < a_iGuard; ++l )
         {
            a_oAppendInto.AppendChar( 32 );
         }
      }
      p_slDestList.Add( a_oAppendInto.Value );
   }
}

///////////////////////////////////////////////////////////////////////////////
// function
///////////////////////////////////////////////////////////////////////////////

function void ReverseList( StrList p_slStrList )
{
   auto StrList a_slStrList;
   for( int a_nItem = p_slStrList.GetCount() - 1; a_nItem >= 0; --a_nItem )
   {
      a_slStrList.Add( p_slStrList.GetAt( a_nItem ) );
   }

   p_slStrList.Clear();

   for( int a_nStr = 0; a_nStr < a_slStrList.GetCount(); ++a_nStr )
   {
      p_slStrList.Add( a_slStrList.GetAt( a_nStr ) );
   }
}
